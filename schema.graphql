type Identity @entity {
    id: ID!
    address: String!
    displayName: String
    legalName: String
    email: String
    riot: String
    image: String
    twitter: String
    web: String

    web3name: String
    discord: String

    createdOrganizations: [Organization!]! @derivedFrom(field: "creatorIdentity")
    controllerOrganizations: [Organization!]! @derivedFrom(field: "primeIdentity")
    organizationMembers: [OrganizationMember!]! @derivedFrom(field: "identity")

    createdCampaigns: [Campaign!]! @derivedFrom(field: "creatorIdentity")
    campaignContributors: [CampaignContributor!]! @derivedFrom(field: "identity")

    createdProposals: [Proposal!]! @derivedFrom(field: "creatorIdentity")
    proposalVoters: [ProposalVoter!]! @derivedFrom(field: "identity")
}

type Organization @entity {
    id: ID!
    creator: String!
    creatorIdentity: Identity!
    prime: String!
    primeIdentity: Identity!
    treasury: String!
    treasuryIdentity: Identity!
    accessModel: String!
    feeModel: String!
    type: String!
    state: String!
    membershipFee: BigInt
    govCurrency: String!
    payCurrency: String!
    memberLimit: Int!
    metadata: OrganizationMetadata
    createdAtBlock: Int!
    updatedAtBlock: Int!
    deposit: BigInt!

    members: [OrganizationMember!] @derivedFrom(field: "organization")
    campaigns: [Campaign!]! @derivedFrom(field: "organization")
    proposals: [Proposal]! @derivedFrom(field: "organization")
}

type OrganizationMetadata @entity {
    id: ID!
    name: String!
    description: String!
    website: String!
    email: String!
    repo: String!
    logo: String!
    header: String!
}

type OrganizationMember @entity {
    id: ID!
    organization: Organization!
    address: String!
    identity: Identity!
}

type Campaign @entity {
    id: ID!
    organization: Organization!
    creator: String!
    creatorIdentity: Identity!
    admin: String!
    adminIdentity: Identity!
    target: BigInt!
    deposit: BigInt!
    start: Int!
    expiry: Int!
    protocol: String!
    governance: String!
    tokenSymbol: String
    tokenName: String

    state: String!

    metadata: CampaignMetadata
    contributors: [CampaignContributor]! @derivedFrom(field: "campaign")
    proposals: [Proposal]! @derivedFrom(field: "campaign")

    createdAtBlock: Int!
}

type CampaignMetadata @entity {
    id: ID!
    name: String!
    email: String!
    title: String!
    description: String!
    markdown: String!
    logo: String!
    header: String!
}

type CampaignContributor @entity {
    id: ID!
    campaign: Campaign!

    address: String!
    identity: Identity!

    contributed: BigInt!
}

type Proposal @entity {
    id: ID!
    creator: String!
    creatorIdentity: Identity!
    organization: Organization!
    campaign: Campaign
    type: String!
    deposit: BigInt!
    state: String!
    voting: Voting!
    start: Int!
    expiry: Int!
    createdAtBlock: Int!

    amount: BigInt
    currencyId: String
    beneficiary: String
    beneficiaryIdentity: Identity
    slashingRule: String

    metadata: ProposalMetadata
}

type ProposalMetadata @entity {
    id: ID!
    name: String!
    description: String!
}

type Voting @entity {
    id: ID!
    unit: String!
    scale: String!
    yes: BigInt!
    no: BigInt!
    quorum: String
    majority: String!
}

type ProposalVoter @entity {
    id: ID!
    voting: Voting!
    address: String!
    identity: Identity!
    power: BigInt!
    amount: BigInt
    voted: Boolean!
}
